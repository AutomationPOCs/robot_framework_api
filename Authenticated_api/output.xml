<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.10.9 on win32)" generated="20230201 17:24:45.869" rpa="false" schemaversion="3">
<suite id="s1" name="Get" source="C:\Users\ritik\PycharmProjects\pythonProject1\Authenticated_api\Get.robot">
<test id="s1-t1" name="Authenticated_get_request" line="10">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${Base_url}</arg>
<arg>verify=true</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230201 17:24:45.978" level="INFO">Creating Session using : alias=mysession, url=https://musicapi13.p.rapidapi.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=True,                     debug=0 </msg>
<status status="PASS" starttime="20230201 17:24:45.977" endtime="20230201 17:24:45.979"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Content-Type=application/json</arg>
<arg>charset=utf-8</arg>
<arg>X-RapidAPI-Key=1e439c0166msh465d2a9ddc44c59p1a2ab2jsn83310a682d75</arg>
<arg>X-RapidAPI-Host=musicapi13.p.rapidapi.com</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230201 17:24:45.979" level="INFO">${header} = {'Content-Type': 'application/json', 'charset': 'utf-8', 'X-RapidAPI-Key': '1e439c0166msh465d2a9ddc44c59p1a2ab2jsn83310a682d75', 'X-RapidAPI-Host': 'musicapi13.p.rapidapi.com'}</msg>
<status status="PASS" starttime="20230201 17:24:45.979" endtime="20230201 17:24:45.979"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>${parameter1}</arg>
<arg>headers=${header}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230201 17:24:47.059" level="INFO">GET Request : url=https://musicapi13.p.rapidapi.com/search/introspection 
 path_url=/search/introspection 
 headers={'User-Agent': 'python-requests/2.28.1', 'Accept-Encoding': 'gzip, deflate, br', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'charset': 'utf-8', 'X-RapidAPI-Key': '1e439c0166msh465d2a9ddc44c59p1a2ab2jsn83310a682d75', 'X-RapidAPI-Host': 'musicapi13.p.rapidapi.com'} 
 body=None 
 </msg>
<msg timestamp="20230201 17:24:47.059" level="INFO">GET Response : url=https://musicapi13.p.rapidapi.com/search/introspection 
 status=200, reason=OK 
 headers={'Date': 'Wed, 01 Feb 2023 11:54:48 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'etag': 'W/"f9-u+pb01Ho7Cm7fpFbTvCw3YIicDY"', 'Content-Encoding': 'br', 'NEL': '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}', 'CF-Cache-Status': 'DYNAMIC', 'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400', 'x-dns-prefetch-control': 'off', 'x-download-options': 'noopen', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-xss-protection': '1; mode=block', 'vary': 'Accept-Encoding', 'x-content-type-options': 'nosniff', 'CF-RAY': '792a7e922f25a3d0-SIN', 'x-frame-options': 'SAMEORIGIN', 'set-cookie': 'route=b73693c34d2dd4dd67d2768a27ba0cee|98c16c8f75070426ae5c5247561c10e5; Expires=Fri, 03-Feb-23 11:54:48 GMT; Max-Age=172800; Path=/; Secure; HttpOnly', 'Report-To': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=Ka6kixeCZ4b9ECEv%2FKA%2FRq%2B6YsAU9e6PPO0x6YgjlTuc3prpxWl1OplVNs8OTYYNDQfgLdUmnwMINgbLL0XDWv9Z1MlnOw0%2BJMUwve5IQHrD%2BQ2YLfHSQ46csMvBU98H%2Fxvf"}],"group":"cf-nel","max_age":604800}', 'X-RateLimit-Requests-Limit': '1000', 'X-RateLimit-Requests-Remaining': '959', 'X-RateLimit-Requests-Reset': '2401863', 'Server': 'RapidAPI-1.2.8', 'X-RapidAPI-Version': '1.2.8', 'X-RapidAPI-Region': 'AWS - ap-southeast-1'} 
 body={"sources":["amazon-music","apple-music","deezer","pandora","sound-cloud","spotify","tidal","youtube","youtube-music","napster","qobuz","qq-music","yandex-music","vk","anghami","zvuk","gaana","jiosaavn","resso","boomplay"],"types":["track","album"]} 
 </msg>
<msg timestamp="20230201 17:24:47.060" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230201 17:24:45.980" endtime="20230201 17:24:47.060"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${response.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230201 17:24:47.071" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20230201 17:24:47.070" endtime="20230201 17:24:47.071"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230201 17:24:47.072" endtime="20230201 17:24:47.072"/>
</kw>
<kw>
<var>${response_body}=</var>
<var>${response.content}</var>
<msg timestamp="20230201 17:24:47.073" level="FAIL">Keyword name cannot be empty.</msg>
<status status="FAIL" starttime="20230201 17:24:47.073" endtime="20230201 17:24:47.073"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${response_dict}</var>
<arg>json.loads(response.content)</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20230201 17:24:47.073" endtime="20230201 17:24:47.073"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${response_dict}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230201 17:24:47.074" endtime="20230201 17:24:47.074"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${response_body}</arg>
<arg>spotify</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20230201 17:24:47.074" endtime="20230201 17:24:47.074"/>
</kw>
<kw name="get value from json">
<var>${extracted_data}</var>
<arg>${response.json()}[0]</arg>
<arg>sources</arg>
<status status="NOT RUN" starttime="20230201 17:24:47.078" endtime="20230201 17:24:47.078"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${extracted_data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230201 17:24:47.079" endtime="20230201 17:24:47.079"/>
</kw>
<doc>This test case verifies that the response code of thr GET Request should be 200
The response body contain 'source' key with value [ amazon-music , apple-music , deezer ,pandora ,sound-cloud ,spotify ]
and the response body contains 'type' Key with value [ track,album]</doc>
<tag>smoke</tag>
<status status="FAIL" starttime="20230201 17:24:45.976" endtime="20230201 17:24:47.079">Keyword name cannot be empty.</status>
</test>
<status status="FAIL" starttime="20230201 17:24:45.871" endtime="20230201 17:24:47.080"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">smoke</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Get">Get</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230201 17:24:45.974" level="ERROR">Error in file 'C:\Users\ritik\PycharmProjects\pythonProject1\Authenticated_api\Get.robot' on line 4: Importing library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\Scripts\robot.exe
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\python310.zip
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\DLLs
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\lib
  C:\Users\ritik\AppData\Local\Programs\Python\Python310
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\lib\site-packages
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\lib\site-packages\win32
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\lib\site-packages\win32\lib
  C:\Users\ritik\AppData\Local\Programs\Python\Python310\lib\site-packages\Pythonwin</msg>
</errors>
</robot>
